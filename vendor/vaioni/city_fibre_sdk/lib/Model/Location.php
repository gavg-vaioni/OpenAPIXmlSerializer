<?php
/**
 * Location
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Vaioni\CityFibreAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CityFibre Provisioning API - NICC ALA
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.30
 * Contact: customer-api-queries@cityfibre.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Vaioni\CityFibreAPI\Model;

use \ArrayAccess;
use \Vaioni\CityFibreAPI\ObjectSerializer;

/**
 * Location Class Doc Comment
 *
 * @category Class
 * @package  Vaioni\CityFibreAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class Location implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'location';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'address_key' => 'mixed',
        'address_key_type' => 'mixed',
        'british_address' => '\Vaioni\CityFibreAPI\Model\BritishAddress',
        'gps_coordinates' => '\Vaioni\CityFibreAPI\Model\GpsCoordinates',
        'cfhrfs_status' => 'mixed',
        'cfhcabinet_area' => 'mixed',
        'cfhcabinet_release_date' => 'mixed',
        'cfhcabinet_date_rating' => 'mixed',
        'cfhbduk_subsidised' => 'mixed',
        'cfhloc_flags' => 'mixed',
        'cfhproperty_classification' => 'mixed',
        'cfhdemand_point_type_category' => 'mixed',
        'cfhdrop_architecture_type_category' => 'mixed'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'address_key' => null,
        'address_key_type' => null,
        'british_address' => null,
        'gps_coordinates' => null,
        'cfhrfs_status' => null,
        'cfhcabinet_area' => null,
        'cfhcabinet_release_date' => 'date',
        'cfhcabinet_date_rating' => null,
        'cfhbduk_subsidised' => null,
        'cfhloc_flags' => null,
        'cfhproperty_classification' => null,
        'cfhdemand_point_type_category' => null,
        'cfhdrop_architecture_type_category' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'address_key' => true,
		'address_key_type' => true,
		'british_address' => false,
		'gps_coordinates' => false,
		'cfhrfs_status' => true,
		'cfhcabinet_area' => true,
		'cfhcabinet_release_date' => true,
		'cfhcabinet_date_rating' => true,
		'cfhbduk_subsidised' => true,
		'cfhloc_flags' => true,
		'cfhproperty_classification' => true,
		'cfhdemand_point_type_category' => true,
		'cfhdrop_architecture_type_category' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'address_key' => 'addressKey',
        'address_key_type' => 'addressKeyType',
        'british_address' => 'britishAddress',
        'gps_coordinates' => 'gpsCoordinates',
        'cfhrfs_status' => 'cfh:rfs_status',
        'cfhcabinet_area' => 'cfh:cabinet_area',
        'cfhcabinet_release_date' => 'cfh:cabinet_release_date',
        'cfhcabinet_date_rating' => 'cfh:cabinet_date_rating',
        'cfhbduk_subsidised' => 'cfh:bduk_subsidised',
        'cfhloc_flags' => 'cfh:loc_flags',
        'cfhproperty_classification' => 'cfh:property_classification',
        'cfhdemand_point_type_category' => 'cfh:demand_point_type_category',
        'cfhdrop_architecture_type_category' => 'cfh:drop_architecture_type_category'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'address_key' => 'setAddressKey',
        'address_key_type' => 'setAddressKeyType',
        'british_address' => 'setBritishAddress',
        'gps_coordinates' => 'setGpsCoordinates',
        'cfhrfs_status' => 'setCfhrfsStatus',
        'cfhcabinet_area' => 'setCfhcabinetArea',
        'cfhcabinet_release_date' => 'setCfhcabinetReleaseDate',
        'cfhcabinet_date_rating' => 'setCfhcabinetDateRating',
        'cfhbduk_subsidised' => 'setCfhbdukSubsidised',
        'cfhloc_flags' => 'setCfhlocFlags',
        'cfhproperty_classification' => 'setCfhpropertyClassification',
        'cfhdemand_point_type_category' => 'setCfhdemandPointTypeCategory',
        'cfhdrop_architecture_type_category' => 'setCfhdropArchitectureTypeCategory'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'address_key' => 'getAddressKey',
        'address_key_type' => 'getAddressKeyType',
        'british_address' => 'getBritishAddress',
        'gps_coordinates' => 'getGpsCoordinates',
        'cfhrfs_status' => 'getCfhrfsStatus',
        'cfhcabinet_area' => 'getCfhcabinetArea',
        'cfhcabinet_release_date' => 'getCfhcabinetReleaseDate',
        'cfhcabinet_date_rating' => 'getCfhcabinetDateRating',
        'cfhbduk_subsidised' => 'getCfhbdukSubsidised',
        'cfhloc_flags' => 'getCfhlocFlags',
        'cfhproperty_classification' => 'getCfhpropertyClassification',
        'cfhdemand_point_type_category' => 'getCfhdemandPointTypeCategory',
        'cfhdrop_architecture_type_category' => 'getCfhdropArchitectureTypeCategory'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('address_key', $data ?? [], null);
        $this->setIfExists('address_key_type', $data ?? [], null);
        $this->setIfExists('british_address', $data ?? [], null);
        $this->setIfExists('gps_coordinates', $data ?? [], null);
        $this->setIfExists('cfhrfs_status', $data ?? [], null);
        $this->setIfExists('cfhcabinet_area', $data ?? [], null);
        $this->setIfExists('cfhcabinet_release_date', $data ?? [], null);
        $this->setIfExists('cfhcabinet_date_rating', $data ?? [], null);
        $this->setIfExists('cfhbduk_subsidised', $data ?? [], null);
        $this->setIfExists('cfhloc_flags', $data ?? [], null);
        $this->setIfExists('cfhproperty_classification', $data ?? [], null);
        $this->setIfExists('cfhdemand_point_type_category', $data ?? [], null);
        $this->setIfExists('cfhdrop_architecture_type_category', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['address_key'] === null) {
            $invalidProperties[] = "'address_key' can't be null";
        }
        if ((mb_strlen($this->container['address_key']) > 63)) {
            $invalidProperties[] = "invalid value for 'address_key', the character length must be smaller than or equal to 63.";
        }

        if ($this->container['address_key_type'] === null) {
            $invalidProperties[] = "'address_key_type' can't be null";
        }
        if ($this->container['british_address'] === null) {
            $invalidProperties[] = "'british_address' can't be null";
        }
        if ($this->container['cfhrfs_status'] === null) {
            $invalidProperties[] = "'cfhrfs_status' can't be null";
        }
        if ($this->container['cfhcabinet_area'] === null) {
            $invalidProperties[] = "'cfhcabinet_area' can't be null";
        }
        if ($this->container['cfhcabinet_release_date'] === null) {
            $invalidProperties[] = "'cfhcabinet_release_date' can't be null";
        }
        if ($this->container['cfhcabinet_date_rating'] === null) {
            $invalidProperties[] = "'cfhcabinet_date_rating' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets address_key
     *
     * @return mixed
     */
    public function getAddressKey()
    {
        return $this->container['address_key'];
    }

    /**
     * Sets address_key
     *
     * @param mixed $address_key Unique identifier of the address (UPRN)
     *
     * @return self
     */
    public function setAddressKey($address_key)
    {
        if ((mb_strlen($address_key) > 63)) {
            throw new \InvalidArgumentException('invalid length for $address_key when calling Location., must be smaller than or equal to 63.');
        }


        if (is_null($address_key)) {
            array_push($this->openAPINullablesSetToNull, 'address_key');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('address_key', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['address_key'] = $address_key;

        return $this;
    }

    /**
     * Gets address_key_type
     *
     * @return mixed
     */
    public function getAddressKeyType()
    {
        return $this->container['address_key_type'];
    }

    /**
     * Sets address_key_type
     *
     * @param mixed $address_key_type address_key_type
     *
     * @return self
     */
    public function setAddressKeyType($address_key_type)
    {

        if (is_null($address_key_type)) {
            array_push($this->openAPINullablesSetToNull, 'address_key_type');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('address_key_type', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['address_key_type'] = $address_key_type;

        return $this;
    }

    /**
     * Gets british_address
     *
     * @return \Vaioni\CityFibreAPI\Model\BritishAddress
     */
    public function getBritishAddress()
    {
        return $this->container['british_address'];
    }

    /**
     * Sets british_address
     *
     * @param \Vaioni\CityFibreAPI\Model\BritishAddress $british_address british_address
     *
     * @return self
     */
    public function setBritishAddress($british_address)
    {

        if (is_null($british_address)) {
            throw new \InvalidArgumentException('non-nullable british_address cannot be null');
        }

        $this->container['british_address'] = $british_address;

        return $this;
    }

    /**
     * Gets gps_coordinates
     *
     * @return \Vaioni\CityFibreAPI\Model\GpsCoordinates|null
     */
    public function getGpsCoordinates()
    {
        return $this->container['gps_coordinates'];
    }

    /**
     * Sets gps_coordinates
     *
     * @param \Vaioni\CityFibreAPI\Model\GpsCoordinates|null $gps_coordinates gps_coordinates
     *
     * @return self
     */
    public function setGpsCoordinates($gps_coordinates)
    {

        if (is_null($gps_coordinates)) {
            throw new \InvalidArgumentException('non-nullable gps_coordinates cannot be null');
        }

        $this->container['gps_coordinates'] = $gps_coordinates;

        return $this;
    }

    /**
     * Gets cfhrfs_status
     *
     * @return mixed
     */
    public function getCfhrfsStatus()
    {
        return $this->container['cfhrfs_status'];
    }

    /**
     * Sets cfhrfs_status
     *
     * @param mixed $cfhrfs_status cfhrfs_status
     *
     * @return self
     */
    public function setCfhrfsStatus($cfhrfs_status)
    {

        if (is_null($cfhrfs_status)) {
            array_push($this->openAPINullablesSetToNull, 'cfhrfs_status');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('cfhrfs_status', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['cfhrfs_status'] = $cfhrfs_status;

        return $this;
    }

    /**
     * Gets cfhcabinet_area
     *
     * @return mixed
     */
    public function getCfhcabinetArea()
    {
        return $this->container['cfhcabinet_area'];
    }

    /**
     * Sets cfhcabinet_area
     *
     * @param mixed $cfhcabinet_area cfhcabinet_area
     *
     * @return self
     */
    public function setCfhcabinetArea($cfhcabinet_area)
    {

        if (is_null($cfhcabinet_area)) {
            array_push($this->openAPINullablesSetToNull, 'cfhcabinet_area');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('cfhcabinet_area', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['cfhcabinet_area'] = $cfhcabinet_area;

        return $this;
    }

    /**
     * Gets cfhcabinet_release_date
     *
     * @return mixed
     */
    public function getCfhcabinetReleaseDate()
    {
        return $this->container['cfhcabinet_release_date'];
    }

    /**
     * Sets cfhcabinet_release_date
     *
     * @param mixed $cfhcabinet_release_date cfhcabinet_release_date
     *
     * @return self
     */
    public function setCfhcabinetReleaseDate($cfhcabinet_release_date)
    {

        if (is_null($cfhcabinet_release_date)) {
            array_push($this->openAPINullablesSetToNull, 'cfhcabinet_release_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('cfhcabinet_release_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['cfhcabinet_release_date'] = $cfhcabinet_release_date;

        return $this;
    }

    /**
     * Gets cfhcabinet_date_rating
     *
     * @return mixed
     */
    public function getCfhcabinetDateRating()
    {
        return $this->container['cfhcabinet_date_rating'];
    }

    /**
     * Sets cfhcabinet_date_rating
     *
     * @param mixed $cfhcabinet_date_rating cfhcabinet_date_rating
     *
     * @return self
     */
    public function setCfhcabinetDateRating($cfhcabinet_date_rating)
    {

        if (is_null($cfhcabinet_date_rating)) {
            array_push($this->openAPINullablesSetToNull, 'cfhcabinet_date_rating');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('cfhcabinet_date_rating', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['cfhcabinet_date_rating'] = $cfhcabinet_date_rating;

        return $this;
    }

    /**
     * Gets cfhbduk_subsidised
     *
     * @return mixed|null
     */
    public function getCfhbdukSubsidised()
    {
        return $this->container['cfhbduk_subsidised'];
    }

    /**
     * Sets cfhbduk_subsidised
     *
     * @param mixed|null $cfhbduk_subsidised Location is BDUK subsidised
     *
     * @return self
     */
    public function setCfhbdukSubsidised($cfhbduk_subsidised)
    {

        if (is_null($cfhbduk_subsidised)) {
            array_push($this->openAPINullablesSetToNull, 'cfhbduk_subsidised');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('cfhbduk_subsidised', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['cfhbduk_subsidised'] = $cfhbduk_subsidised;

        return $this;
    }

    /**
     * Gets cfhloc_flags
     *
     * @return mixed|null
     */
    public function getCfhlocFlags()
    {
        return $this->container['cfhloc_flags'];
    }

    /**
     * Sets cfhloc_flags
     *
     * @param mixed|null $cfhloc_flags cfhloc_flags
     *
     * @return self
     */
    public function setCfhlocFlags($cfhloc_flags)
    {

        if (is_null($cfhloc_flags)) {
            array_push($this->openAPINullablesSetToNull, 'cfhloc_flags');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('cfhloc_flags', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['cfhloc_flags'] = $cfhloc_flags;

        return $this;
    }

    /**
     * Gets cfhproperty_classification
     *
     * @return mixed|null
     */
    public function getCfhpropertyClassification()
    {
        return $this->container['cfhproperty_classification'];
    }

    /**
     * Sets cfhproperty_classification
     *
     * @param mixed|null $cfhproperty_classification cfhproperty_classification
     *
     * @return self
     */
    public function setCfhpropertyClassification($cfhproperty_classification)
    {

        if (is_null($cfhproperty_classification)) {
            array_push($this->openAPINullablesSetToNull, 'cfhproperty_classification');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('cfhproperty_classification', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['cfhproperty_classification'] = $cfhproperty_classification;

        return $this;
    }

    /**
     * Gets cfhdemand_point_type_category
     *
     * @return mixed|null
     */
    public function getCfhdemandPointTypeCategory()
    {
        return $this->container['cfhdemand_point_type_category'];
    }

    /**
     * Sets cfhdemand_point_type_category
     *
     * @param mixed|null $cfhdemand_point_type_category cfhdemand_point_type_category
     *
     * @return self
     */
    public function setCfhdemandPointTypeCategory($cfhdemand_point_type_category)
    {

        if (is_null($cfhdemand_point_type_category)) {
            array_push($this->openAPINullablesSetToNull, 'cfhdemand_point_type_category');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('cfhdemand_point_type_category', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['cfhdemand_point_type_category'] = $cfhdemand_point_type_category;

        return $this;
    }

    /**
     * Gets cfhdrop_architecture_type_category
     *
     * @return mixed|null
     */
    public function getCfhdropArchitectureTypeCategory()
    {
        return $this->container['cfhdrop_architecture_type_category'];
    }

    /**
     * Sets cfhdrop_architecture_type_category
     *
     * @param mixed|null $cfhdrop_architecture_type_category cfhdrop_architecture_type_category
     *
     * @return self
     */
    public function setCfhdropArchitectureTypeCategory($cfhdrop_architecture_type_category)
    {

        if (is_null($cfhdrop_architecture_type_category)) {
            array_push($this->openAPINullablesSetToNull, 'cfhdrop_architecture_type_category');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('cfhdrop_architecture_type_category', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['cfhdrop_architecture_type_category'] = $cfhdrop_architecture_type_category;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


